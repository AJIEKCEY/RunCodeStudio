version: '3.9'

services:
  client:
    container_name: client
    build:
      context: .
      dockerfile: Dockerfile.client.prod
      args:
        CLIENT_SERVER_PORT: 3000
    restart: always
    expose:
      - '3000'
    environment:
      - CLIENT_SERVER_PORT=3000
    networks:
      - game

  server:
    container_name: server
    build:
      context: .
      dockerfile: Dockerfile.server.prod
      args:
        SERVER_PORT: 3001
    restart: always
    expose:
      - '3001'
    environment:
      - SERVER_PORT=3001
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    depends_on:
      - postgres
    networks:
      - game

  nginx:
    container_name: nginx
    build:
      context: ./nginx
      dockerfile: Dockerfile
    image: prakticum-nginx:prod
    restart: always
    ports:
      - '80:80'
    depends_on:
      - client
      - server
    networks:
      - game

  postgres:
    container_name: postgres
    image: postgres:latest
    restart: always
    expose:
      - '5432'
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
    volumes:
      - ./tmp/postgresql/data:/var/lib/postgresql/data
    networks:
      - game

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:latest
    restart: always
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    ports:
      - '8080:80'
    depends_on:
      - postgres
    networks:
      - game
    volumes:
      - pgadmin-data:/var/lib/pgadmin

volumes:
  pgadmin-data:
    driver: local

networks:
  game:
    driver: bridge
